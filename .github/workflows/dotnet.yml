# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish Test Results
  # You may pin to the exact commit or the version.
  # uses: EnricoMi/publish-unit-test-result-action@46ab8d49369d898e381a607119161771bc65c2a6
      uses: EnricoMi/publish-unit-test-result-action@v2.2.0
      with:
        # GitHub API Access Token
        github_token: # optional, default is ${{ github.token }}
        # Requests to the GitHub API are retried this number of times. The value must be a positive integer or zero.
        github_retries: 3 
        # Name of the created check run
        check_name: # optional, default is Test Results
        # An alternative title for the pull request comment. Defaults to value of check_name input
        comment_title: # optional
        # The action posts comments to pull requests that are associated with the commit. Set to "always" - always comment, "changes" - comment when changes w.r.t. the target branch exist, "changes in failures" - when changes in the number of failures and errors exist, "changes in errors" - when changes in the number of (only) errors exist, "failures" - when failures or errors exist, "errors" - when (only) errors exist, "off" - to not create pull request comments
        comment_mode: # optional, default is always
        # The created test result check run has failure state if any test fails or test errors occur. Never fails when set to "nothing", fails only on errors when set to "errors". Default is "test failures".
        fail_on: # optional, default is test failures
        # Deprecated, use "junit_files" instead.
        files: # optional
        # File patterns of JUnit XML test result files. Supports *, **, ?, and []. Use multiline string for multiple patterns. Patterns starting with ! exclude the matching files. There have to be at least one pattern starting without a `!`.
        junit_files: # optional
        # File patterns of NUnit XML test result files. Supports *, **, ?, and []. Use multiline string for multiple patterns. Patterns starting with ! exclude the matching files. There have to be at least one pattern starting without a `!`.
        nunit_files: # optional
        # File patterns of XUnit XML test result files. Supports *, **, ?, and []. Use multiline string for multiple patterns. Patterns starting with ! exclude the matching files. There have to be at least one pattern starting without a `!`.
        xunit_files: # optional
        # File patterns of TRX test result files. Supports *, **, ?, and []. Use multiline string for multiple patterns. Patterns starting with ! exclude the matching files. There have to be at least one pattern starting without a `!`.
        trx_files: # optional
        # Time values in the test result files have this unit. Supports "seconds" and "milliseconds".
        time_unit: # optional, default is seconds
        # Individual runs of the same test may see different failures. Reports all individual failures when set "true" or the first only otherwise
        report_individual_runs: # optional
        # De-duplicates classes with same name by their file name when set "true", combines test results for those classes otherwise
        deduplicate_classes_by_file_name: # optional
        # Does not collect test run information from the test result files, which is useful for very large files. This disables any check run annotations
        ignore_runs: # optional, default is false
        # Set to "true", the results are published as part of the job summary page of the workflow run
        job_summary: # optional, default is true
        # Test results are compared to results of earlier commits to highlight changes: "false" - disable comparison, "true" - compare across commits
        compare_to_earlier_commit: # optional, default is true
        # As part of pull requests, GitHub builds a merge commit, which combines the commit and the target branch. If tests ran on the actual pushed commit, then set this to "commit". Defaults to "merge".
        pull_request_build: # optional, default is merge
        # An alternative event file to use. Useful to replace a "workflow_run" event file with the actual source event file.
        event_file: # optional
        # An alternative event name to use. Useful to replace a "workflow_run" event name with the actual source event name: github.event.workflow_run.event.
        event_name: # optional
        # Limits the number of removed or skipped tests reported on pull request comments. This report can be disabled with a value of 0. The default is 10.
        test_changes_limit: # optional
        # Adds additional information to the check run. This is a comma-separated list of any of the following values: "all tests" - list all found tests, "skipped tests" - list all skipped tests. Set to "none" to add no extra annotations at all
        check_run_annotations: # optional, default is all tests, skipped tests
        # Adds check run annotations only on given branches. Comma-separated list of branch names allowed, asterisk "*" matches all branches. Defaults to event.repository.default_branch or "main, master".
        check_run_annotations_branch: # optional
        # Sets the number of seconds the action waits between concurrent read requests to the GitHub API. This throttles the API usage to avoid abuse rate limits: https://docs.github.com/en/rest/overview/resources-in-the-rest-api#abuse-rate-limits
        seconds_between_github_reads: # optional, default is 0.25
        # Sets the number of seconds the action waits between concurrent write requests to the GitHub API. This throttles the API usage to avoid abuse rate limits: https://docs.github.com/en/rest/overview/resources-in-the-rest-api#abuse-rate-limits
        seconds_between_github_writes: # optional, default is 2.0
        # Results are written to this JSON file.
        json_file: # optional
        # Formatted numbers in JSON use this character to separate groups of thousands. Common values are "," or ".". Defaults to punctuation space (\u2008).
        json_thousands_separator: # optional, default is â€ˆ
        # Write out all individual test case results to the JSON file. Setting this to "true" can greatly increase the size of the output. Defaults to "false".
        json_test_case_results: # optional
    - name: Publish NuGet
  # You may pin to the exact commit or the version.
  # uses: brandedoutcast/publish-nuget@c12b8546b67672ee38ac87bea491ac94a587f7cc
      uses: brandedoutcast/publish-nuget@v2.5.5
      with:
        PROJECT_FILE_PATH: TakeHome.Contracts/TakeHome.Contracts.csproj
        # NuGet package id, used for version detection & defaults to project name
        PACKAGE_NAME: takehome.contracts
        # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
        VERSION_FILE_PATH: # optional
        # Regex pattern to extract version info in a capturing group
        VERSION_REGEX: # optional, default is ^\s*<Version>(.*)<\/Version>\s*$
        # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
        VERSION_STATIC: 1.0.0
        # Flag to toggle git tagging, enabled by default
        TAG_COMMIT: # optional, default is true
        # Format of the git tag, [*] gets replaced with actual version
        TAG_FORMAT: # optional, default is v*
        # API key to authenticate with NuGet server
        NUGET_KEY: # optional
        # NuGet server uri hosting the packages, defaults to https://api.nuget.org
        NUGET_SOURCE: # optional, default is https://api.nuget.org
        # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
        INCLUDE_SYMBOLS: # optional
      
  
